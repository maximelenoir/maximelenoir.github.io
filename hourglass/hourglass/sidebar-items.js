initSidebarItems({"enum":[["FmtError","Possible errors when formatting a `Datetime`."],["InputError","Possible errors when creating a `Datetime`."],["TzError","Possible errors when creating a `Timezone`."]],"struct":[["Datetime","A precise point in time along associated to a `Timezone`.The `Datetime` cannot be created on its own as it depends on a `Timezone`. `hourglass` does not expose a naive flavor of Datetime. To build a `Datetime`, instanciate a `Timezone` first and call the desired method."],["Deltatime","A delta of time used in `Datetime` arithmetic.This represents a duration in time and can be used to shift `Datetime` by a specified amount of time or as a result of comparing two `Datetime`. Different types of `Deltatime` can be created and each of those types affects `Datetime` differently. For example, `Deltatime::seconds(86400)` is different from `Deltatime::days(1)` because a `Deltatime` is dependant of the `Datetime` it applies to.Example"],["Every","An iterator used to schedule execution at regular time interval.`Every` allows to create loops whose bodies will be run at fixed interval. If the execution of the body takes longer than the requested step, the next iteration is scheduled right away. The precision of the interval is platform-dependant."],["Range","An iterator over a period of time.`Range` provides an iterator that will go through `Timespec` values in a given range. A step argument, defined as a `Deltatime`, is used to control the pace of the iteration. `Range` offers support for both bounded and unbounded iterations."],["Timespec","An offset from the Unix Epoch.`Timespec` is the building block of `Datetime` and can be converted from and to a `Datetime`. It is intrinsically expressed in the `UTC` timezone since it holds the number of seconds elapsed since the Unix Epoch `1970-01-01T00:00:00Z` and therefore is not ambiguous.It is equivalent to a `Datetime` without `Timezone` information and therefore does not have access to as much methods as its counterpart. For example, its `date` representation cannot be computed.  In return, the type is simpler and easier to handle and move around. Like `Datetime`, `Timespec` is leap second aware."],["Timezone","A timezone.There are several ways to create a new `Timezone`. It can be loaded from the `IANA Time Zone Database`, following the `Area/Location` pattern (e.g. `Europe/Paris`) with `Timezone::new`. A `Timezone` can be created as a fixed offset from `UTC` with `Timezone::fixed` or `UTC` itself with `Timezone::utc`. Finally, the `Timezone` can match the system local timezone with `Timezone::local`.Example"]]});